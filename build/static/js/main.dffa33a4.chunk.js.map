{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/Persons.js","components/ErrorMsg.js","App.js","index.js"],"names":["Person","person","remove","name","number","id","onClick","Persons","filterWith","persons","flen","length","fval","toUpperCase","filter","v","substring","map","key","PersonForm","state","change","submit","onSubmit","value","onChange","type","Filter","text","baseUrl","axios","get","then","response","data","newObject","post","delete","put","ErrorMsg","console","log","msgclass","className","message","App","useState","setPersons","stateNewPerson","stateFilters","stateError","setstateError","onMessage","useEffect","PersonsService","catch","error","event","target","preventDefault","newName","index","findIndex","loop","newPerson","finalizeSubmit","newPersons","window","confirm","dbPerson","concat","item","targetID","parseInt","resp","newPers","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dffa33a4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({person, remove}) => (\n    <li >Name: {person.name} Number: {person.number} <button name={person.id} onClick={remove}>remove</button></li>\n)\n\nconst Persons = ({filterWith,persons,remove}) => {\n\n    const flen = filterWith.length\n    const fval = filterWith.toUpperCase()\n\n    const name_filter = (v) => { \n        const vcut = v.name.substring(0,flen)\n        return vcut.toUpperCase() === fval\n    }\n\n    return (\n    <div>\n        <ul>\n        { persons.filter(name_filter).map( (person) => (\n            <Person key={person.name} person={person} remove={remove}/>\n            ) )\n        }\n        </ul>\n    </div>)\n}\n\nexport default Persons","import React from 'react'\n\n\n\n\n\nconst PersonForm = ({state,change,submit}) => (\n    <div>\n        \n        <form onSubmit={submit}>\n            <div> Name: <input name=\"name\" value={state.name} onChange={change}/> </div>\n            <div> Number: <input name=\"number\" value={state.number} onChange={change}/> </div> \n            <button type=\"submit\">add</button>\n        </form>\n    </div>\n)\n\nexport default PersonForm;","import React  from 'react'\n\n\nconst Filter = ({text,change}) => (\n    <div>\n        <p>Filter show with</p>\n        <form >\n            <input value={text} onChange={ change }/>\n        </form>\n    </div>\n)\n\nexport default Filter;\n","import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(response => response.data)\n}\n\nconst create = newObject => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const req =  axios.put(`${baseUrl}/${id}`, newObject)\n    return req.then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\n\nexport default { getAll, create, remove, update }\n\n","import React from 'react'\n\n\nconst ErrorMsg = ({ state }) => {\n\n    if (state.type === null)\n        return null;\n\n    console.log(\"ErrorMsg\", state)\n\n    const msgclass = state.type === \"error\"\n        ? \"msg-base msg-error\"\n        : \"msg-base msg-info\"\n\n\n    return (\n        <div className={msgclass}>\n            {state.message}\n        </div >)\n\n}\n\nexport default ErrorMsg;\n","import React, { useState, useEffect } from 'react'\n\n\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport PersonsService from './services/Persons'\nimport ErrorMsg from './components/ErrorMsg'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n\n    const stateNewPerson = useState({ 'name': '', 'number': '' })\n    const stateFilters = useState('')\n    const [stateError, setstateError] = useState({ 'type': null, 'message': '' })\n\n    const onMessage = (type, message) => {\n        setstateError({ type, message })\n    }\n\n    useEffect(() => {\n        console.log('effect');\n        PersonsService.getAll()\n            .then(data => {\n                console.log('got data', data)\n                setPersons(data);\n            }\n            )\n            .catch(error => {\n                onMessage(\"error\", \"Cannot connect\")\n            })\n    }, []);\n\n    console.log('render', persons.length, 'persons');\n\n\n\n\n    const onFilterChange = (event) => {\n        const value = event.target.value\n        stateFilters[1](value)\n        console.log(\"filter\", value)\n    }\n\n    const onDelete = (event) => {\n        const targetID = parseInt(event.target.name)\n        console.log(\"delete\", targetID)\n        console.log(persons)\n\n        const index = persons.findIndex((loop) => (loop.id === targetID))\n        console.log('Remove index', index)\n\n        if (index < 0)\n            return; // not good!\n\n        if (window.confirm(\"Really delete \" + persons[index].name + \"?\") === false)\n            return;\n\n        console.log('Confirmation ok')\n\n        PersonsService.remove(targetID)\n            .then(resp => {\n                const newPers = [...persons]\n                newPers.splice(index, 1);\n                console.log(newPers)\n                setPersons(newPers)\n                onMessage(\"info\", \"Information \" +  persons[index].name + \" was deleted!\" ) \n            })\n            .catch(error => { onMessage(\"error\", \"Information \" +  persons[index].name + \" has been deleted before!\" ) })\n    }\n\n    const onNewPersonSubmit = (event) => {\n        event.preventDefault()\n        console.log('Submit new', stateNewPerson[0])\n        const newName = stateNewPerson[0].name.toUpperCase()\n\n        const index = persons.findIndex((loop) => (loop.name.toUpperCase() === newName))\n\n        console.log(\"found\", index)\n        const newPerson = { ...stateNewPerson[0] }\n\n        const finalizeSubmit = (newPersons, message ) => {\n            stateNewPerson[1]({ 'name': '', 'number': '' })\n            setPersons(newPersons);\n            onMessage( \"info\", message )\n\n        }\n\n        if (index >= 0) {\n\n            if (window.confirm(\"Person \" + newName + \" exists! Replace with new?\") === false) {\n                console.log('bail out!')\n                return\n            }\n\n            PersonsService.update(persons[index].id, newPerson)\n                .then(dbPerson => {\n                    let newPersons = [...persons]\n                    newPersons[index] = dbPerson\n                    finalizeSubmit(newPersons, \"Modified \" + dbPerson.name );\n                })\n                .catch(error => { onMessage(\"error\", \"Information \" +  persons[index].name + \" has been deleted before!\" ) })\n\n            return;\n        }\n        else {\n            // Did not exists, create new.\n            PersonsService.create(newPerson)\n                .then(dbPerson => {\n                    finalizeSubmit(persons.concat(dbPerson), \"Added \" + dbPerson.name )\n\n                })\n                .catch(error => { onMessage(\"error\", \"Unable to create!\" ) })\n        }\n    }\n\n    const onNewPersonChange = (event) => {\n        const item = event.target.name\n        const value = event.target.value\n\n\n        const newPerson = { ...stateNewPerson[0], [item]: value };\n        console.log(\"new person\", newPerson)\n        stateNewPerson[1](newPerson)\n    }\n\n    return (\n        <div>\n            <ErrorMsg state={stateError} />\n\n            <h2>Phonebook</h2>\n\n            <Filter text={stateFilters[0]} change={onFilterChange} />\n\n            <h3>Add a new</h3>\n\n            <PersonForm state={stateNewPerson[0]} submit={onNewPersonSubmit} change={onNewPersonChange} />\n\n            <h3>Numbers</h3>\n\n            <Persons filterWith={stateFilters[0]} persons={persons} remove={onDelete} />\n        </div>\n    )\n\n\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\n\nReactDOM.render(<App  />, document.getElementById('root'))"],"sourceRoot":""}